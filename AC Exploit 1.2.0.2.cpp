// AC Exploit 1.2.0.2.cpp : Diese Datei enthält die Funktion "main". Hier beginnt und endet die Ausführung des Programms.
//
#include "stdafx.h"
#include <iostream>
#include "proc.h"

#include "ColorConsole.hpp"



int main()
{
	std::cout << "  Cakeys Fruity Trainer\n" << endl;

	DWORD procId = GetProcId(L"ac_client.exe");
	std::cout << "|Example|" <<dye::aqua("  Searching for 'ac_client.exe' ") << endl;

	uintptr_t moduleBase = GetModuleBaseAddress(procId, L"ac_client.exe");

	HANDLE hProcess = 0;

	hProcess = OpenProcess(PROCESS_ALL_ACCESS, NULL, procId);

	if (!hProcess)
	{
		//MessageBoxA(0, "No Process found, abort!", "No Process found!", 0);
		std::cout << "|Example|" << dye::red("  No Process found, abort!");
		Sleep(2500);
		exit(0);
	}

	std::cout << "|Example|" << dye::purple("  Process found and opened!") << endl <<endl;

	uintptr_t dynamicPtrBaseAddr = moduleBase + 0x10f4f4;

	std::cout << "|Example|" << dye::yellow("  DynamicPtrBaseAddr") << (" -> ") << dye::green("0x") << uppercase << std::hex << dye::green(dynamicPtrBaseAddr) << std::endl;

	std::vector<unsigned int> ammoOffsets = { 0x374, 0x14, 0x0 };
	uintptr_t ammoAddr = FindDMAAddy(hProcess, dynamicPtrBaseAddr, ammoOffsets);

	std::cout << "|Example|" << "  AmmoAddr           -> " << dye::green("0x") << std::hex << dye::green(ammoAddr) << std::endl;

	//std::vector<unsigned int> healthOffsets = { 0xF8 };
	//uintptr_t healthAddr = FindDMAAddy(hProcess, dynamicPtrBaseAddr, healthOffsets);
	//std::cout << "|Example|" << "  HealthAddr HUD     -> " << dye::green("0x") << std::hex << dye::green(healthAddr) << std::endl;

	std::vector<unsigned int> healthValueOffsets = { 0x0, 0x27C };
	uintptr_t healthValueAddr = FindDMAAddy(hProcess, moduleBase + 0x0010FC84, healthValueOffsets);
	std::cout << "|Example|" << "  HealthAddr         -> " << dye::green("0x") << std::hex << dye::green(healthValueAddr) << std::endl;


	std::vector<unsigned int> armorOffsets = { 0x0, 0x280 };
	uintptr_t armorAddr = FindDMAAddy(hProcess, moduleBase + 0x0010FC84, armorOffsets);
	std::cout << "|Example|" << "  ArmorAddr          -> " << dye::green("0x") << std::hex << dye::green(armorAddr) << std::endl;

	getchar();
	return 0;
}
 //TODO
 //ReClass.Net
 //Coords

 //TBD
 //UI(?)